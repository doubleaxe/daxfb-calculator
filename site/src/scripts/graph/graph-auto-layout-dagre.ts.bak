import * as dagre from 'dagre';
import type {BlueprintModel} from '../model/store';
import {resolveConnections} from './resolve-connections';

export function autoLayoutGraph(blueprint: BlueprintModel) {
    const g = new dagre.graphlib.Graph();
    g.setGraph({
        rankdir: 'LR',
        nodesep: 200,
        edgesep: 100,
    });
    g.setDefaultEdgeLabel(function() { return {}; });

    const items = [...blueprint.items];
    for(const item of items) {
        const rect = item.rect;
        g.setNode(item.key, {
            width: rect.width,
            height: rect.height,
        });
    }

    const connections = resolveConnections(items);
    for(const connection of connections) {
        for(const link of connection.links) {
            if(link.input?.ownerItem && link.output?.ownerItem) {
                g.setEdge(link.output.ownerItem.key, link.input.ownerItem.key);
            }
        }
    }

    dagre.layout(g);

    for(const nodeId of g.nodes()) {
        const node = g.node(nodeId);
        const item = blueprint.itemByKey(nodeId);
        if(node && item) {
            item.setRect(item.rect.assign({x: node.x, y: node.y}));
        }
    }
}
